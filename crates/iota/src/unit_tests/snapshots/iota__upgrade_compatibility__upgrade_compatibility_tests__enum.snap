---
source: crates/iota/src/upgrade_compatibility/../unit_tests/upgrade_compatibility_tests.rs
expression: normalize_path(err.to_string())
---
error[Compatibility E01003]: ability mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:10:17
   │
10 │     public enum EnumAddAbility has copy, drop { // add drop
   │                 ^^^^^^^^^^^^^^ Unexpected ability: 'drop'
   │
   = Enums are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original ability of the enum: 'copy' for enum 'EnumAddAbility'.

error[Compatibility E01003]: ability mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:14:17
   │
14 │     public enum EnumRemoveAbility has copy { // drop removed
   │                 ^^^^^^^^^^^^^^^^^ Missing ability: 'drop'
   │
   = Enums are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original abilities of the enum: 'copy' and 'drop' for enum 'EnumRemoveAbility'.

error[Compatibility E01003]: ability mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:18:17
   │
18 │     public enum EnumAddAndRemoveAbility has copy, store { // change drop to store
   │                 ^^^^^^^^^^^^^^^^^^^^^^^ Mismatched abilities: missing 'drop', unexpected 'store'
   │
   = Enums are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original abilities of the enum: 'copy' and 'drop' for enum 'EnumAddAndRemoveAbility'.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:24:9
   │
22 │     public enum EnumAddVariant {
   │                 -------------- Enum definition
23 │         A,
24 │         B, // added
   │         ^ New unexpected variant 'B'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variant for enum 'EnumAddVariant' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:27:17
   │
27 │     public enum EnumRemoveVariant {
   │                 ^^^^^^^^^^^^^^^^^ Missing variant 'B'.
   │
   = Enums are part of a module's public interface and cannot be changed during an upgrade.
   = Restore the original enum's variant 'B' for enum 'EnumRemoveVariant' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:34:9
   │
32 │     public enum EnumChangeVariant {
   │                 ----------------- Enum definition
33 │         A,
34 │         C, // changed from B
   │         ^ Mismatched variant 'C', expected 'B'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangeVariant' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:39:9
   │
37 │     public enum EnumChangeAndAddVariant {
   │                 ----------------------- Enum definition
38 │         A,
39 │         C, // to be changed to C
   │         ^ Mismatched variant 'C', expected 'B'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangeAndAddVariant' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:39:9
   │
37 │     public enum EnumChangeAndAddVariant {
   │                 ----------------------- Enum definition
38 │         A,
39 │         C, // to be changed to C
   │         ^ New unexpected variant 'C'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangeAndAddVariant' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:40:9
   │
37 │     public enum EnumChangeAndAddVariant {
   │                 ----------------------- Enum definition
   ·
40 │         D // added
   │         ^ New unexpected variant 'D'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangeAndAddVariant' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:43:17
   │
43 │     public enum EnumChangeAndRemoveVariant {
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ Missing variant 'C'.
   │
   = Enums are part of a module's public interface and cannot be changed during an upgrade.
   = Restore the original enum's variant 'C' for enum 'EnumChangeAndRemoveVariant' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:45:9
   │
43 │     public enum EnumChangeAndRemoveVariant {
   │                 -------------------------- Enum definition
44 │         A,
45 │         C, // changed to C
   │         ^ Mismatched variant 'C', expected 'B'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangeAndRemoveVariant' including the ordering.

error[Compatibility E01003]: ability mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:50:17
   │
50 │     public enum EnumAddAbilityWithTypes has copy, drop { // drop added
   │                 ^^^^^^^^^^^^^^^^^^^^^^^ Unexpected ability: 'drop'
   │
   = Enums are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original ability of the enum: 'copy' for enum 'EnumAddAbilityWithTypes'.

error[Compatibility E01003]: ability mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:54:17
   │
54 │     public enum EnumRemoveAbilityWithTypes has copy { // drop removed
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ Missing ability: 'drop'
   │
   = Enums are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original abilities of the enum: 'copy' and 'drop' for enum 'EnumRemoveAbilityWithTypes'.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:60:9
   │
58 │     public enum EnumAddVariantWithTypes {
   │                 ----------------------- Enum definition
59 │         A { a: u8 },
60 │         B { b: u8 }, // added
   │         ^^^^^^^^^^^ New unexpected variant 'B'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variant for enum 'EnumAddVariantWithTypes' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:63:17
   │
63 │     public enum EnumRemoveVariantWithTypes {
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ Missing variant 'B'.
   │
   = Enums are part of a module's public interface and cannot be changed during an upgrade.
   = Restore the original enum's variant 'B' for enum 'EnumRemoveVariantWithTypes' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:70:9
   │
68 │     public enum EnumChangeVariantWithTypes {
   │                 -------------------------- Enum definition
69 │         A { a: u8 },
70 │         C { b: u8 }, // changed to C
   │         ^^^^^^^^^^^ Mismatched variant 'C', expected 'B'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangeVariantWithTypes' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:75:9
   │
73 │     public enum EnumChangeAndAddVariantWithTypes {
   │                 -------------------------------- Enum definition
74 │         A { a: u8 },
75 │         C { b: u8 }, // to be changed to C
   │         ^^^^^^^^^^^ Mismatched variant 'C', expected 'B'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangeAndAddVariantWithTypes' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:75:9
   │
73 │     public enum EnumChangeAndAddVariantWithTypes {
   │                 -------------------------------- Enum definition
74 │         A { a: u8 },
75 │         C { b: u8 }, // to be changed to C
   │         ^^^^^^^^^^^ New unexpected variant 'C'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangeAndAddVariantWithTypes' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:76:9
   │
73 │     public enum EnumChangeAndAddVariantWithTypes {
   │                 -------------------------------- Enum definition
   ·
76 │         D { d: u8 }, // added
   │         ^^^^^^^^^^^ New unexpected variant 'D'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangeAndAddVariantWithTypes' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:79:17
   │
79 │     public enum EnumChangeAndRemoveVariantWithPositionalTypes {
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Missing variant 'C'.
   │
   = Enums are part of a module's public interface and cannot be changed during an upgrade.
   = Restore the original enum's variant 'C' for enum 'EnumChangeAndRemoveVariantWithPositionalTypes' including the ordering.

error[Compatibility E02001]: variant mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:81:9
   │
79 │     public enum EnumChangeAndRemoveVariantWithPositionalTypes {
   │                 --------------------------------------------- Enum definition
80 │         A(u8),
81 │         C(u8), // changed to C
   │         ^^^^^ Mismatched variant 'C', expected 'B'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangeAndRemoveVariantWithPositionalTypes' including the ordering.

error[Compatibility E01004]: field mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:86:9
   │
85 │     public enum EnumChangePositionalType {
   │                 ------------------------ Enum definition
86 │         A(u8), // add u8
   │         ^^^^^ Mismatched variant field count, expected 0, found 1.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangePositionalType' including the ordering.

error[Compatibility E01002]: type mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:87:9
   │
85 │     public enum EnumChangePositionalType {
   │                 ------------------------ Enum definition
86 │         A(u8), // add u8
87 │         B(u16), // changed to u16
   │         ^^^^^^ Mismatched field type 'u16', expected 'u8'.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangePositionalType' including the ordering.

error[Compatibility E01004]: field mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:88:9
   │
85 │     public enum EnumChangePositionalType {
   │                 ------------------------ Enum definition
   ·
88 │         C(u8), // removed u8
   │         ^^^^^ Mismatched variant field count, expected 2, found 1.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangePositionalType' including the ordering.

error[Compatibility E01004]: field mismatch
   ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:89:9
   │
85 │     public enum EnumChangePositionalType {
   │                 ------------------------ Enum definition
   ·
89 │         D, // removed u8 from variant
   │         ^ Mismatched variant field count, expected 1, found 0.
   │
   = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
   = Restore the original enum's variants for enum 'EnumChangePositionalType' including the ordering.

error[Compatibility E01002]: type mismatch
    ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:101:9
    │
100 │     public enum EnumWithPositionalChanged {
    │                 ------------------------- Enum definition
101 │         A(ChangeFieldB), // changed to ChangeFieldB
    │         ^^^^^^^^^^^^^^^ Mismatched field type '0x0::upgrades::ChangeFieldB', expected '0x0::upgrades::ChangeFieldA'.
    │
    = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
    = Restore the original enum's variant for enum 'EnumWithPositionalChanged' including the ordering.

error[Compatibility E01002]: type mismatch
    ┌─ /fixtures/upgrade_errors/enum_errors_v2/sources/UpgradeErrors.move:105:9
    │  
104 │       public enum EnumWithNamedChanged {
    │                   -------------------- Enum definition
105 │ ╭         A {
106 │ │             x: ChangeFieldA,
107 │ │             y: ChangeFieldA,
108 │ │             z: ChangeFieldB, // changed to ChangeFieldB
109 │ │         },
    │ ╰─────────^ Mismatched field type '0x0::upgrades::ChangeFieldB', expected '0x0::upgrades::ChangeFieldA'.
    │  
    = Enums are part of a module's public interface and cannot be removed or changed during an upgrade.
    = Restore the original enum's variant for enum 'EnumWithNamedChanged' including the ordering.


Upgrade failed, this package requires changes to be compatible with the existing package. Its upgrade policy is set to 'compatible'.
