// Copyright (c) Mysten Labs, Inc.
// Modifications Copyright (c) 2024 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Ampli - A strong typed wrapper for your Analytics
 *
 * This file is generated by Amplitude.
 * To update run 'ampli pull web'
 *
 * Required dependencies: @amplitude/analytics-browser@^1.3.0
 * Tracking Plan Version: 3
 * Build: 1.0.0
 * Runtime: browser:typescript-ampli-v2
 *
 * [View Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest)
 *
 * [Full Setup Instructions](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/implementation/web)
 */

import * as amplitude from '@amplitude/analytics-browser';

export type Environment = 'iotawallet';

export const ApiKey: Record<Environment, string> = {
    iotawallet: '2a5d35822a1bab41835813f0223f319e',
};

/**
 * Default Amplitude configuration options. Contains tracking plan information.
 */
export const DefaultConfiguration: BrowserOptions = {
    plan: {
        version: '3',
        branch: 'main',
        source: 'web',
        versionId: '41c28342-e260-4c3e-8465-6618203f115a',
    },
    ...{
        ingestionMetadata: {
            sourceName: 'browser-typescript-ampli',
            sourceVersion: '2.0.0',
        },
    },
    serverZone: amplitude.Types.ServerZone.EU,
};

export interface LoadOptionsBase {
    disabled?: boolean;
}

export type LoadOptionsWithEnvironment = LoadOptionsBase & {
    environment: Environment;
    client?: { configuration?: BrowserOptions };
};
export type LoadOptionsWithApiKey = LoadOptionsBase & {
    client: { apiKey: string; configuration?: BrowserOptions };
};
export type LoadOptionsWithClientInstance = LoadOptionsBase & {
    client: { instance: BrowserClient };
};

export type LoadOptions =
    | LoadOptionsWithEnvironment
    | LoadOptionsWithApiKey
    | LoadOptionsWithClientInstance;

export interface AddedAccountsProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    accountType?: string;
    /**
     * | Rule | Value |
     * |---|---|
     * | Type | number |
     */
    numberOfAccounts?: number;
}

export interface ClickedAppsBannerCtaProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    sourceFlow?: string;
}

export interface ClickedCollectibleCardProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    collectibleType?: string;
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    objectId?: string;
}

export interface ClickedCreateNewAccountProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    sourceFlow?: string;
}

export interface ClickedHideAssetProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    collectibleType?: string;
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    objectId?: string;
}

export interface ClickedImportPassphraseProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    sourceFlow?: string;
}

export interface ClickedImportPrivateKeyProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    sourceFlow?: string;
}

export interface ClickedStakeIotaProperties {
    isCurrentlyStaking?: boolean;
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    sourceFlow?: string;
}

export interface ClickedUnstakeIotaProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Type | number |
     */
    stakedAmount?: number;
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    validatorAddress?: string;
}

export interface ConnectedHardwareWalletProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    hardwareWalletType?: string;
}

export interface DisconnectedApplicationProperties {
    applicationName?: string;
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    applicationUrl?: string;
    /**
     * | Rule | Value |
     * |---|---|
     * | Type | number |
     */
    disconnectedAccounts?: number;
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    sourceFlow?: string;
}

export interface OpenedApplicationProperties {
    applicationName?: string;
}

export interface OpenedConnectLedgerFlowProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    sourceFlow?: string;
}

export interface OpenedWalletExtensionProperties {
    activeAccountType?: string;
    activeNetwork?: string;
    activeOrigin?: string;
    pagePath?: string;
    pagePathFragment?: string;
    walletAppMode?: string;
    walletVersion?: string;
}

export interface PinnedCoinProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    coinType?: string;
}

export interface RespondedToConnectionRequestProperties {
    applicationName?: string;
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    applicationUrl?: string;
    approvedConnection?: boolean;
}

export interface RespondedToTransactionRequestProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    applicationUrl?: string;
    approvedTransaction?: boolean;
    receivedFailureWarning?: boolean;
}

export interface SelectedCoinProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    coinType?: string;
    /**
     * | Rule | Value |
     * |---|---|
     * | Type | number |
     */
    totalBalance?: number;
}

export interface SelectedValidatorProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    validatorAddress?: string;
    /**
     * | Rule | Value |
     * |---|---|
     * | Type | number |
     */
    validatorAPY?: number;
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    validatorName?: string;
}

export interface SentCoinsProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    coinType?: string;
}

export interface SentCollectibleProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    objectId?: string;
}

export interface StakedIotaProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Type | number |
     */
    stakedAmount?: number;
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    validatorAddress?: string;
}

export interface SwitchedNetworkProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    toNetwork?: string;
}

export interface UnpinnedCoinProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    coinType?: string;
}

export interface UnstakedIotaProperties {
    /**
     * | Rule | Value |
     * |---|---|
     * | Regex |  |
     */
    validatorAddress?: string;
}

export class AddedAccounts implements BaseEvent {
    event_type = 'added accounts';

    constructor(public event_properties?: AddedAccountsProperties) {
        this.event_properties = event_properties;
    }
}

export class ClickedAppsBannerCta implements BaseEvent {
    event_type = 'clicked apps banner cta';

    constructor(public event_properties?: ClickedAppsBannerCtaProperties) {
        this.event_properties = event_properties;
    }
}

export class ClickedCollectibleCard implements BaseEvent {
    event_type = 'clicked collectible card';

    constructor(public event_properties?: ClickedCollectibleCardProperties) {
        this.event_properties = event_properties;
    }
}

export class ClickedCreateNewAccount implements BaseEvent {
    event_type = 'clicked create new account';

    constructor(public event_properties?: ClickedCreateNewAccountProperties) {
        this.event_properties = event_properties;
    }
}

export class ClickedHideAsset implements BaseEvent {
    event_type = 'clicked hide asset';

    constructor(public event_properties?: ClickedHideAssetProperties) {
        this.event_properties = event_properties;
    }
}

export class ClickedImportPassphrase implements BaseEvent {
    event_type = 'clicked import passphrase';

    constructor(public event_properties?: ClickedImportPassphraseProperties) {
        this.event_properties = event_properties;
    }
}

export class ClickedImportPrivateKey implements BaseEvent {
    event_type = 'clicked import private key';

    constructor(public event_properties?: ClickedImportPrivateKeyProperties) {
        this.event_properties = event_properties;
    }
}

export class ClickedStakeIota implements BaseEvent {
    event_type = 'clicked stake IOTA';

    constructor(public event_properties?: ClickedStakeIotaProperties) {
        this.event_properties = event_properties;
    }
}

export class ClickedUnstakeIota implements BaseEvent {
    event_type = 'clicked unstake IOTA';

    constructor(public event_properties?: ClickedUnstakeIotaProperties) {
        this.event_properties = event_properties;
    }
}

export class ConnectedHardwareWallet implements BaseEvent {
    event_type = 'connected hardware wallet';

    constructor(public event_properties?: ConnectedHardwareWalletProperties) {
        this.event_properties = event_properties;
    }
}

export class DisconnectedApplication implements BaseEvent {
    event_type = 'disconnected application';

    constructor(public event_properties?: DisconnectedApplicationProperties) {
        this.event_properties = event_properties;
    }
}

export class OpenedApplication implements BaseEvent {
    event_type = 'opened application';

    constructor(public event_properties?: OpenedApplicationProperties) {
        this.event_properties = event_properties;
    }
}

export class OpenedConnectLedgerFlow implements BaseEvent {
    event_type = 'opened connect ledger flow';

    constructor(public event_properties?: OpenedConnectLedgerFlowProperties) {
        this.event_properties = event_properties;
    }
}

export class OpenedWalletExtension implements BaseEvent {
    event_type = 'opened wallet extension';

    constructor(public event_properties?: OpenedWalletExtensionProperties) {
        this.event_properties = event_properties;
    }
}

export class PinnedCoin implements BaseEvent {
    event_type = 'pinned coin';

    constructor(public event_properties?: PinnedCoinProperties) {
        this.event_properties = event_properties;
    }
}

export class RespondedToConnectionRequest implements BaseEvent {
    event_type = 'responded to connection request';

    constructor(public event_properties?: RespondedToConnectionRequestProperties) {
        this.event_properties = event_properties;
    }
}

export class RespondedToTransactionRequest implements BaseEvent {
    event_type = 'responded to transaction request';

    constructor(public event_properties?: RespondedToTransactionRequestProperties) {
        this.event_properties = event_properties;
    }
}

export class SelectedCoin implements BaseEvent {
    event_type = 'selected coin';

    constructor(public event_properties?: SelectedCoinProperties) {
        this.event_properties = event_properties;
    }
}

export class SelectedValidator implements BaseEvent {
    event_type = 'selected validator';

    constructor(public event_properties?: SelectedValidatorProperties) {
        this.event_properties = event_properties;
    }
}

export class SentCoins implements BaseEvent {
    event_type = 'sent coins';

    constructor(public event_properties?: SentCoinsProperties) {
        this.event_properties = event_properties;
    }
}

export class SentCollectible implements BaseEvent {
    event_type = 'sent collectible';

    constructor(public event_properties?: SentCollectibleProperties) {
        this.event_properties = event_properties;
    }
}

export class StakedIota implements BaseEvent {
    event_type = 'staked IOTA';

    constructor(public event_properties?: StakedIotaProperties) {
        this.event_properties = event_properties;
    }
}

export class SwitchedNetwork implements BaseEvent {
    event_type = 'switched network';

    constructor(public event_properties?: SwitchedNetworkProperties) {
        this.event_properties = event_properties;
    }
}

export class UnpinnedCoin implements BaseEvent {
    event_type = 'unpinned coin';

    constructor(public event_properties?: UnpinnedCoinProperties) {
        this.event_properties = event_properties;
    }
}

export class UnstakedIota implements BaseEvent {
    event_type = 'unstaked IOTA';

    constructor(public event_properties?: UnstakedIotaProperties) {
        this.event_properties = event_properties;
    }
}

export class ViewedLedgerTutorial implements BaseEvent {
    event_type = 'viewed ledger tutorial';
}

export type PromiseResult<T> = { promise: Promise<T | void> };

const getVoidPromiseResult = () => ({ promise: Promise.resolve() });

// prettier-ignore
export class Ampli {
  private disabled: boolean = false;
  private amplitude?: BrowserClient;

  get client(): BrowserClient {
    this.isInitializedAndEnabled();
    return this.amplitude!;
  }

  get isLoaded(): boolean {
    return this.amplitude != null;
  }

  private isInitializedAndEnabled(): boolean {
    if (!this.amplitude) {
      console.error('ERROR: Ampli is not yet initialized. Have you called ampli.load() on app start?');
      return false;
    }
    return !this.disabled;
  }

  /**
   * Initialize the Ampli SDK. Call once when your application starts.
   *
   * @param options Configuration options to initialize the Ampli SDK with.
   */
  load(options: LoadOptions): PromiseResult<void> {
    this.disabled = options.disabled ?? false;

    if (this.amplitude) {
      console.warn('WARNING: Ampli is already intialized. Ampli.load() should be called once at application startup.');
      return getVoidPromiseResult();
    }

    let apiKey: string | null = null;
    if (options.client && 'apiKey' in options.client) {
      apiKey = options.client.apiKey;
    } else if ('environment' in options) {
      apiKey = ApiKey[options.environment];
    }

    if (options.client && 'instance' in options.client) {
      this.amplitude = options.client.instance;
    } else if (apiKey) {
      this.amplitude = amplitude.createInstance();
      const configuration = (options.client && 'configuration' in options.client) ? options.client.configuration : {};
      return this.amplitude.init(apiKey, undefined, { ...DefaultConfiguration, ...configuration });
    } else {
      console.error("ERROR: ampli.load() requires 'environment', 'client.apiKey', or 'client.instance'");
    }

    return getVoidPromiseResult();
  }

  /**
   * Identify a user and set user properties.
   *
   * @param userId The user's id.
   * @param options Optional event options.
   */
  identify(
    userId: string | undefined,
    options?: EventOptions,
  ): PromiseResult<Result> {
    if (!this.isInitializedAndEnabled()) {
      return getVoidPromiseResult();
    }

    if (userId) {
      options = {...options,  user_id: userId};
    }

    const amplitudeIdentify = new amplitude.Identify();
    return this.amplitude!.identify(
      amplitudeIdentify,
      options,
    );
  }

 /**
  * Flush the event.
  */
  flush() : PromiseResult<Result> {
    if (!this.isInitializedAndEnabled()) {
      return getVoidPromiseResult();
    }

    return this.amplitude!.flush();
  }

  /**
   * Track event
   *
   * @param event The event to track.
   * @param options Optional event options.
   */
  track(event: Event, options?: EventOptions): PromiseResult<Result> {
    if (!this.isInitializedAndEnabled()) {
      return getVoidPromiseResult();
    }

    return this.amplitude!.track(event, undefined, options);
  }

  /**
   * added accounts
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/added%20accounts)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. accountType)
   * @param options Amplitude event options.
   */
  addedAccounts(
    properties?: AddedAccountsProperties,
    options?: EventOptions,
  ) {
    return this.track(new AddedAccounts(properties), options);
  }

  /**
   * clicked apps banner cta
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/clicked%20apps%20banner%20cta)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. sourceFlow)
   * @param options Amplitude event options.
   */
  clickedAppsBannerCta(
    properties?: ClickedAppsBannerCtaProperties,
    options?: EventOptions,
  ) {
    return this.track(new ClickedAppsBannerCta(properties), options);
  }

  /**
   * clicked collectible card
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/clicked%20collectible%20card)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. collectibleType)
   * @param options Amplitude event options.
   */
  clickedCollectibleCard(
    properties?: ClickedCollectibleCardProperties,
    options?: EventOptions,
  ) {
    return this.track(new ClickedCollectibleCard(properties), options);
  }

  /**
   * clicked create new account
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/clicked%20create%20new%20account)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. sourceFlow)
   * @param options Amplitude event options.
   */
  clickedCreateNewAccount(
    properties?: ClickedCreateNewAccountProperties,
    options?: EventOptions,
  ) {
    return this.track(new ClickedCreateNewAccount(properties), options);
  }

  /**
   * clicked hide asset
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/clicked%20hide%20asset)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. collectibleType)
   * @param options Amplitude event options.
   */
  clickedHideAsset(
    properties?: ClickedHideAssetProperties,
    options?: EventOptions,
  ) {
    return this.track(new ClickedHideAsset(properties), options);
  }

  /**
   * clicked import passphrase
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/clicked%20import%20passphrase)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. sourceFlow)
   * @param options Amplitude event options.
   */
  clickedImportPassphrase(
    properties?: ClickedImportPassphraseProperties,
    options?: EventOptions,
  ) {
    return this.track(new ClickedImportPassphrase(properties), options);
  }

  /**
   * clicked import private key
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/clicked%20import%20private%20key)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. sourceFlow)
   * @param options Amplitude event options.
   */
  clickedImportPrivateKey(
    properties?: ClickedImportPrivateKeyProperties,
    options?: EventOptions,
  ) {
    return this.track(new ClickedImportPrivateKey(properties), options);
  }

  /**
   * clicked stake IOTA
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/clicked%20stake%20IOTA)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. isCurrentlyStaking)
   * @param options Amplitude event options.
   */
  clickedStakeIota(
    properties?: ClickedStakeIotaProperties,
    options?: EventOptions,
  ) {
    return this.track(new ClickedStakeIota(properties), options);
  }

  /**
   * clicked unstake IOTA
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/clicked%20unstake%20IOTA)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. stakedAmount)
   * @param options Amplitude event options.
   */
  clickedUnstakeIota(
    properties?: ClickedUnstakeIotaProperties,
    options?: EventOptions,
  ) {
    return this.track(new ClickedUnstakeIota(properties), options);
  }

  /**
   * connected hardware wallet
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/connected%20hardware%20wallet)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. hardwareWalletType)
   * @param options Amplitude event options.
   */
  connectedHardwareWallet(
    properties?: ConnectedHardwareWalletProperties,
    options?: EventOptions,
  ) {
    return this.track(new ConnectedHardwareWallet(properties), options);
  }

  /**
   * disconnected application
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/disconnected%20application)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. applicationName)
   * @param options Amplitude event options.
   */
  disconnectedApplication(
    properties?: DisconnectedApplicationProperties,
    options?: EventOptions,
  ) {
    return this.track(new DisconnectedApplication(properties), options);
  }

  /**
   * opened application
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/opened%20application)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. applicationName)
   * @param options Amplitude event options.
   */
  openedApplication(
    properties?: OpenedApplicationProperties,
    options?: EventOptions,
  ) {
    return this.track(new OpenedApplication(properties), options);
  }

  /**
   * opened connect ledger flow
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/opened%20connect%20ledger%20flow)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. sourceFlow)
   * @param options Amplitude event options.
   */
  openedConnectLedgerFlow(
    properties?: OpenedConnectLedgerFlowProperties,
    options?: EventOptions,
  ) {
    return this.track(new OpenedConnectLedgerFlow(properties), options);
  }

  /**
   * opened wallet extension
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/opened%20wallet%20extension)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. activeAccountType)
   * @param options Amplitude event options.
   */
  openedWalletExtension(
    properties?: OpenedWalletExtensionProperties,
    options?: EventOptions,
  ) {
    return this.track(new OpenedWalletExtension(properties), options);
  }

  /**
   * pinned coin
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/pinned%20coin)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. coinType)
   * @param options Amplitude event options.
   */
  pinnedCoin(
    properties?: PinnedCoinProperties,
    options?: EventOptions,
  ) {
    return this.track(new PinnedCoin(properties), options);
  }

  /**
   * responded to connection request
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/responded%20to%20connection%20request)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. applicationName)
   * @param options Amplitude event options.
   */
  respondedToConnectionRequest(
    properties?: RespondedToConnectionRequestProperties,
    options?: EventOptions,
  ) {
    return this.track(new RespondedToConnectionRequest(properties), options);
  }

  /**
   * responded to transaction request
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/responded%20to%20transaction%20request)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. applicationUrl)
   * @param options Amplitude event options.
   */
  respondedToTransactionRequest(
    properties?: RespondedToTransactionRequestProperties,
    options?: EventOptions,
  ) {
    return this.track(new RespondedToTransactionRequest(properties), options);
  }

  /**
   * selected coin
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/selected%20coin)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. coinType)
   * @param options Amplitude event options.
   */
  selectedCoin(
    properties?: SelectedCoinProperties,
    options?: EventOptions,
  ) {
    return this.track(new SelectedCoin(properties), options);
  }

  /**
   * selected validator
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/selected%20validator)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. validatorAddress)
   * @param options Amplitude event options.
   */
  selectedValidator(
    properties?: SelectedValidatorProperties,
    options?: EventOptions,
  ) {
    return this.track(new SelectedValidator(properties), options);
  }

  /**
   * sent coins
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/sent%20coins)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. coinType)
   * @param options Amplitude event options.
   */
  sentCoins(
    properties?: SentCoinsProperties,
    options?: EventOptions,
  ) {
    return this.track(new SentCoins(properties), options);
  }

  /**
   * sent collectible
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/sent%20collectible)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. objectId)
   * @param options Amplitude event options.
   */
  sentCollectible(
    properties?: SentCollectibleProperties,
    options?: EventOptions,
  ) {
    return this.track(new SentCollectible(properties), options);
  }

  /**
   * staked IOTA
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/staked%20IOTA)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. stakedAmount)
   * @param options Amplitude event options.
   */
  stakedIota(
    properties?: StakedIotaProperties,
    options?: EventOptions,
  ) {
    return this.track(new StakedIota(properties), options);
  }

  /**
   * switched network
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/switched%20network)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. toNetwork)
   * @param options Amplitude event options.
   */
  switchedNetwork(
    properties?: SwitchedNetworkProperties,
    options?: EventOptions,
  ) {
    return this.track(new SwitchedNetwork(properties), options);
  }

  /**
   * unpinned coin
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/unpinned%20coin)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. coinType)
   * @param options Amplitude event options.
   */
  unpinnedCoin(
    properties?: UnpinnedCoinProperties,
    options?: EventOptions,
  ) {
    return this.track(new UnpinnedCoin(properties), options);
  }

  /**
   * unstaked IOTA
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/unstaked%20IOTA)
   *
   * Event has no description in tracking plan.
   *
   * @param properties The event's properties (e.g. validatorAddress)
   * @param options Amplitude event options.
   */
  unstakedIota(
    properties?: UnstakedIotaProperties,
    options?: EventOptions,
  ) {
    return this.track(new UnstakedIota(properties), options);
  }

  /**
   * viewed ledger tutorial
   *
   * [View in Tracking Plan](https://data.eu.amplitude.com/iota-foundation/IOTA%20Wallet/events/main/latest/viewed%20ledger%20tutorial)
   *
   * Event has no description in tracking plan.
   *
   * @param options Amplitude event options.
   */
  viewedLedgerTutorial(
    options?: EventOptions,
  ) {
    return this.track(new ViewedLedgerTutorial(), options);
  }
}

export const ampli = new Ampli();

// BASE TYPES
type BrowserOptions = amplitude.Types.BrowserOptions;

export type BrowserClient = amplitude.Types.BrowserClient;
export type BaseEvent = amplitude.Types.BaseEvent;
export type IdentifyEvent = amplitude.Types.IdentifyEvent;
export type GroupEvent = amplitude.Types.GroupIdentifyEvent;
export type Event = amplitude.Types.Event;
export type EventOptions = amplitude.Types.EventOptions;
export type Result = amplitude.Types.Result;
