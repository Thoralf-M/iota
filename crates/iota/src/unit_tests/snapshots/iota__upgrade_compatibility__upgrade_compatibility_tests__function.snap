---
source: crates/iota/src/upgrade_compatibility/../unit_tests/upgrade_compatibility_tests.rs
expression: normalize_path(err.to_string())
---
error[Compatibility E03001]: function signature mismatch
   ┌─ /fixtures/upgrade_errors/function_errors_v2/sources/UpgradeErrors.move:10:38
   │
10 │     public fun func_with_wrong_param(a: u32): u64 {
   │                                      ^ Unexpected parameter 'u32', expected 'u64'
   │
   = Functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original function's parameter for function 'func_with_wrong_param'.

error[Compatibility E03001]: function signature mismatch
   ┌─ /fixtures/upgrade_errors/function_errors_v2/sources/UpgradeErrors.move:15:42
   │
15 │     public fun func_with_wrong_return(): u32 {
   │                                          ^^^ Unexpected return type 'u32', expected 'u64'
   │
   = Functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original function's return type for function 'func_with_wrong_return'.

error[Compatibility E03001]: function signature mismatch
   ┌─ /fixtures/upgrade_errors/function_errors_v2/sources/UpgradeErrors.move:20:49
   │
20 │     public fun func_with_wrong_param_and_return(a: u32): u32 {
   │                                                 ^ Unexpected parameter 'u32', expected 'u64'
   │
   = Functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original function's parameter for function 'func_with_wrong_param_and_return'.

error[Compatibility E03001]: function signature mismatch
   ┌─ /fixtures/upgrade_errors/function_errors_v2/sources/UpgradeErrors.move:20:58
   │
20 │     public fun func_with_wrong_param_and_return(a: u32): u32 {
   │                                                          ^^^ Unexpected return type 'u32', expected 'u64'
   │
   = Functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original function's return type for function 'func_with_wrong_param_and_return'.

error[Compatibility E03001]: function signature mismatch
   ┌─ /fixtures/upgrade_errors/function_errors_v2/sources/UpgradeErrors.move:25:16
   │
25 │     public fun func_with_wrong_param_length(a: u64): u64 {
   │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Expected 2 parameters, found 1
   │
   = Functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original function's parameters for function 'func_with_wrong_param_length', expected 2 parameters.

error[Compatibility E03001]: function signature mismatch
   ┌─ /fixtures/upgrade_errors/function_errors_v2/sources/UpgradeErrors.move:30:16
   │
30 │     public fun func_with_wrong_return_length(): u64 {
   │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Expected 2 return types, found 1
   │
   = Functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original function's return types for function 'func_with_wrong_return_length'.

error[Compatibility E03001]: function signature mismatch
   ┌─ /fixtures/upgrade_errors/function_errors_v2/sources/UpgradeErrors.move:43:45
   │
43 │     public fun func_with_wrong_struct_param(a: StructB): u64 {
   │                                             ^ Unexpected parameter '0x0::upgrades::StructB', expected '0x0::upgrades::StructA'
   │
   = Functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original function's parameter for function 'func_with_wrong_struct_param'.

error[Compatibility E03001]: function signature mismatch
   ┌─ /fixtures/upgrade_errors/function_errors_v2/sources/UpgradeErrors.move:48:29
   │
48 │     public fun ref_to_value(a: u32): u64 {
   │                             ^ Unexpected parameter 'u32', expected '&u32'
   │
   = Functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original function's parameter for function 'ref_to_value'.

error[Compatibility E03001]: function signature mismatch
   ┌─ /fixtures/upgrade_errors/function_errors_v2/sources/UpgradeErrors.move:53:29
   │
53 │     public fun value_to_ref(a: &u32): u64 {
   │                             ^ Unexpected parameter '&u32', expected 'u32'
   │
   = Functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original function's parameter for function 'value_to_ref'.

error[Compatibility E03001]: function signature mismatch
   ┌─ /fixtures/upgrade_errors/function_errors_v2/sources/UpgradeErrors.move:58:41
   │
58 │     public fun mutable_to_immutable_ref(a: &u32): u64 {
   │                                         ^ Unexpected parameter '&u32', expected '&mut u32'
   │
   = Functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original function's parameter for function 'mutable_to_immutable_ref'.

error[Compatibility E03001]: function signature mismatch
   ┌─ /fixtures/upgrade_errors/function_errors_v2/sources/UpgradeErrors.move:63:41
   │
63 │     public fun immutable_to_mutable_ref(a: &mut u32): u64 {
   │                                         ^ Unexpected parameter '&mut u32', expected '&u32'
   │
   = Functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
   = Restore the original function's parameter for function 'immutable_to_mutable_ref'.


Upgrade failed, this package requires changes to be compatible with the existing package. Its upgrade policy is set to 'compatible'.
